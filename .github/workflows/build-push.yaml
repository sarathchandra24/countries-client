name: Build, Push, and Deploy

on:
  push:
    branches: [ main ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Google Cloud authentication
        id: 'auth'
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: "${{ secrets.GCP_PROJECT_ID }}"
          workload_identity_provider: "projects/${{ secrets.GCP_PROJECT_NUMBER }}/locations/global/workloadIdentityPools/${{ secrets.GCP_IDENTITY_POOL }}/providers/${{ secrets.GCP_IDENTITY_PROVIDERS }}"
          service_account: "github-actions@jenkins-411518.iam.gserviceaccount.com"

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GAR
        uses: docker/login-action@v3
        with:
          registry: ${{ vars.REGISTRY_LOCATION }}-docker.pkg.dev
          username: "oauth2accesstoken"
          password: ${{ steps.auth.outputs.access_token }}

      - name: docker metadata
        id: image-metadata
        uses: docker/metadata-action@v5
        with:
          images: "${{ vars.REGISTRY_LOCATION }}-docker.pkg.dev/${{ vars.ARTIFACTORY_REPO }}/${{ vars.IMAGE_NAME }}"
          tags: |
            raw,latest
            type=ref,event=branch
            type=ref,event=pr
            type=ref,event=tag              
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.image-metadata.outputs.tags }}
          labels: ${{ steps.image-metadata.outputs.labels }}


      - name: Setup Google Kubernetes Engine credentials
        id: 'get-credentials'
        uses: 'google-github-actions/get-gke-credentials@v2'
        with:
          cluster_name: '${{ vars.GKE_CLUSTER_NAME }}'
          location: '${{ vars.GKE_CLUSTER_REGION }}'

      - name: Verify deployment (optional)
        run: kubectl get deployments -n default
